import React, { useEffect, useState } from 'react';
import './NotificationsPage.css';
import { useNavigate } from 'react-router-dom';

interface Notification {
  notificationId: number;
  userId: number;
  ticketId: number;
  message: string;
  createdAt: string;
  read: boolean;
}

type FilterType = 'ALL' | 'READ' | 'UNREAD';

export default function NotificationsPage() {
  const [notifications, setNotifications] = useState<Notification[]>([]);
  const [loading, setLoading] = useState(true);
  const [filter, setFilter] = useState<FilterType>('ALL');
  const navigate = useNavigate();
  const userId = JSON.parse(localStorage.getItem('user') || '{}').userId;

  useEffect(() => {
    fetch(`http://localhost:8765/api/notifications/user/${userId}`, {
      credentials: 'include'
    })
      .then(res => res.json())
      .then(data => {
        setNotifications(data);
        setLoading(false);
      })
      .catch(err => {
        console.error("Failed to fetch notifications:", err);
        setLoading(false);
      });
  }, [userId]);

  const filteredNotifications = notifications.filter(n => {
    if (filter === 'READ') return n.read;
    if (filter === 'UNREAD') return !n.read;
    return true;
  });

  const markAllAsRead = () => {
    fetch(`http://localhost:8765/api/notifications/user/${userId}/mark-all-read`, {
      method: 'PUT',
      credentials: 'include'
    }).then(() => {
      setNotifications(notifications.map(n => ({ ...n, read: true })));
    });
  };

  return (
    <div className="notifications-page">
      <h2>Notifications</h2>

      <div className="actions">
        <select onChange={(e) => setFilter(e.target.value as FilterType)} value={filter}>
          <option value="ALL">All Types</option>
          <option value="UNREAD">Unread</option>
          <option value="READ">Read</option>
        </select>
        <button onClick={markAllAsRead}>Mark All Read</button>
      </div>

      {loading ? (
        <p>Loading notifications...</p>
      ) : (
        <ul className="notification-list">
          {filteredNotifications.map((note) => (
            <li
              key={note.notificationId}
              className={`notification-item ${note.read ? 'read' : 'unread'}`}
              onClick={() => navigate(`/ticket-details/${note.ticketId}`)}
            >
              <strong>{note.message}</strong>
              <span>{new Date(note.createdAt).toLocaleString()}</span>
            </li>
          ))}
        </ul>
      )}
    </div>
  );
}