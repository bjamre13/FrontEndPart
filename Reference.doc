import { useParams } from 'react-router-dom';
import { useEffect, useState } from 'react';

export default function TicketDetailsPage() {
  const { ticketId } = useParams();
  const [ticket, setTicket] = useState(null);
  const [customerName, setCustomerName] = useState('');
  const [agentName, setAgentName] = useState('');
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    if (!ticketId) return;

    setLoading(true);
    setError('');

    fetch(`http://localhost:8765/api/tickets/${ticketId}`, {
      credentials: 'include',
      headers: {
        'Content-Type': 'application/json',
      },
    })
      .then(res => {
        if (!res.ok) {
          throw new Error('Unauthorized or Ticket not found');
        }
        return res.json();
      })
      .then(data => {
        setTicket(data);

        // Fetch customer name
        fetch(`http://localhost:8765/api/users/${data.userId}`, { credentials: 'include' })
          .then(res => res.json())
          .then(user => setCustomerName(user.name))
          .catch(() => setCustomerName(`User #${data.userId}`));

        // Fetch agent name if available
        if (data.agentId) {
          fetch(`http://localhost:8765/api/users/${data.agentId}`, { credentials: 'include' })
            .then(res => res.json())
            .then(agent => setAgentName(agent.name))
            .catch(() => setAgentName(`Agent #${data.agentId}`));
        }

        setLoading(false);
      })
      .catch(err => {
        console.error('Error fetching ticket:', err);
        setError('Failed to load ticket.');
        setLoading(false);
      });
  }, [ticketId]);